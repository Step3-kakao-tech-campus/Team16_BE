server:
  port: 8080
  forward-headers-strategy: framework

spring:
  devtools.add-properties: false

  # MVC
  web.resources.add-mappings: false # endpoint 에 없는 리소스의 경우, 정적 매핑을 하지 않는다.
  mvc:
    throw-exception-if-no-handler-found: true
    dispatch-options-request: false
    log-resolved-exception: true

  # DB
  datasource:
    url: jdbc:h2:mem:test;MODE=MySQL
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2.console.enabled: true
  jpa:
    show-sql: true
    open-in-view: false
    hibernate.ddl-auto: create
    properties:
      hibernate.format_sql: true
      query.fail_on_pagination_over_collection_fetch: true
  data.web.pageable.one-indexed-parameters: true # Request로 들어오는 Pageable 의 인덱스를 1부터 시작하도록 설정합니다.

  # File Upload
  servlet.multipart:
    enabled: true
    max-file-size: "20MB"
    max-request-size: "25MB"

  config.import:
    - optional:classpath:aws-secret.yml

# AWS S3
cloud.aws:
  region.static: ap-northeast-2
  s3.bucket: kakao-techcampus
  stack.auto: false

# API Docs
springdoc.swagger-ui:
  enabled: true
  path: /docs
  tags-sorter: alpha # 태그를 알파벳 순으로 정렬합니다.

# Security
jwt.secret: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK

# Actuator
management:
  server.port: 8081
  endpoints:
    web.base-path: /actuator
    enabled-by-default: false
    jmx.exposure.exclude: "*"
    web.exposure.include: health, info, env, metrics, loggers, threaddump
  endpoint:
    health.enabled: true # 헬스체크
    info.enabled: true # 애플리케이션 정보
    env.enabled: true # 환경변수
    metrics.enabled: true
    loggers.enabled: true # 로그 설정
    threaddump.enabled: true







